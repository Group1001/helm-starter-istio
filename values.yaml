# Default values for <CHARTNAME>.
# This is a YAML-formatted file.

# The overall system your service is a part of
system: <CHARTNAME>
# The name of your service
service: <CHARTNAME>
# The major version number for your service
version: 1

# Docker settings
image:
  # The name of your docker container
  repository: XXXX
  # Your docker container's tag
  tag: YYYY
  imagePullPolicy: IfNotPresent

# The number of pod replicas to run for your service
replicaCount: 3

# Port settings
# Ports must be named <protocol>[-<suffix>] to work with Istio.
# Valid protocols are grpc, http, http2, https, mongo, mysql, redis, tcp, tls, udp
ports:
  - name: http2-status
    port: 8080
    targetPort: 8080

# When enabled, configure the Istio ingress gateway to route outside traffic for the provided
# host name to this service on the ports and protocols defined in the 'ports' section 
# above. 
ingressGateway:
  enabled: true
  name: istio-system/ingress-gateway
  host: |-
    *.{{ $.Release.Namespace }}.group1001.cloud
# matchPrefix: 
#   - "/foo"
#   - "/bar"

configMap:
  enabled: false
  # Where the config map should be mounted inside your container's filesystem.
  mountPath: /config/<CHARTNAME>-config
  fileName: config.yaml
  # Everything under content is copied verbatim into your service's configmap.
  content:
    key1: value1
    key2: value2

env:
  inline: 
    - name: DD_ENV
      value: |-
        {{ $.Release.Namespace }}
    - name: DD_PROFILING_ENABLED
      value: "true"
    - name: DD_TAGS
      value: |-
        app:{{ $.Values.service }},env:{{ $.Release.Namespace }},part-of:{{ .Values.system }}
    - name: DD_TRACE_ANALYTICS_ENABLED
      value: "true"
    - name: DD_TRACE_ENABLED
      value: "true"
  downwardApi: 
    - name: DD_AGENT_HOST
      fieldPath: status.hostIP
  configMapRef: [] # list of name/fileName/content tuples
  secretRef: []    # list of name/content pairs

# Probe settings (use Kubernetes syntax)
probes:
  livenessProbe:
    failureThreshold: 3
    httpGet:
      httpHeaders:
      - name: Accept
        value: application/json
      path: /healthz/liveness
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    failureThreshold: 3
    httpGet:
      httpHeaders:
      - name: Accept
        value: application/json
      path: /healthz/readiness
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
